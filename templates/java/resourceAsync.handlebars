package {{package}};

import java.util.*;
import java.util.concurrent.Future;

import javax.ws.rs.client.InvocationCallback;
import javax.ws.rs.core.Response;

{{#each imports}}import {{this}};
{{/each}}
{{#each asyncImports}}import {{this}};
{{/each}}
public interface {{className}} {
{{#each methods}}	
	{{#if isQueryBuilder}}public {{#if hasReturn}}Future<{{returnType}}>{{else}}void{{/if}} {{operation}}({{queryBuilder}} query, {{#if hasReturn}}InvocationCallback<{{returnType}}>{{else}}InvocationCallback<Response>{{/if}} callback);
	{{else}}public {{#if hasReturn}}Future<{{returnType}}>{{else}}void{{/if}} {{operation}}({{#each parameters}}{{type}} {{variable}}, {{/each}}{{#if hasReturn}}InvocationCallback<{{returnType}}>{{else}}InvocationCallback<Response>{{/if}} callback);{{/if}}{{/each}}
}